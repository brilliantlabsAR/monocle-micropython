name: release_on_tag

on:
  push:
    tags:
      - 'v*'

jobs:
  firmware_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt install gcc-arm-none-eabi libnewlib-arm-none-eabi
          pip install --user nrfutil intelhex

      - name: Bootstrap the dependencies
        run: |
          git submodule init nrfx
          git submodule init micropython
          git submodule update --recursive
          make -C micropython/ports/nrf/ submodules

      - name: Build the firmware and issue a release
        run: |
          make

      - name: Create a release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            You can flash the zip file with the [nRF Device Firmware Update](https://www.nordicsemi.com/Products/Development-tools/nRF-Device-Firmware-Update) phone app after running this Micropython code:
            ```
            import machine;  machine.bootloader()
            ```

            You can flash the hex file with [nrfjprog](https://www.nordicsemi.com/Products/Development-tools/nrf-command-line-tools) and [JLink](https://www.segger.com/products/debug-probes/j-link/):
            ```
            nrfjprog --family nrf52 --recover --program brilliant-monocle-${{ github.ref_name }}.hex --verify --reset
            ```

            See the [documentation](https://monocle-docs.readthedocs.io/en/latest/firmware_how_to.html) for more.

          draft: true
          prerelease: true

      - name: Upload firmware.hex
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/firmware.hex
          asset_name: brilliant-monocle-${{ github.ref_name }}.hex
          asset_content_type: text/plain

      - name: Upload firmware.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/firmware.zip
          asset_name: brilliant-monocle-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload firmware.elf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/application.elf
          asset_name: brilliant-monocle-${{ github.ref_name }}.elf
          asset_content_type: text/plain

      - name: Upload fpga_bitstream.fs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fpga_bitstream.fs
          asset_name: brilliant-monocle-${{ github.ref_name }}.fs
          asset_content_type: text/plain
